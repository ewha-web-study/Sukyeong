import React, { Component} from 'react';
import TOC from "./components/TOC"; //TOC를 App.js에서 쓰기위한 import문
import Subject from "./components/Subject";
import Content from "./components/Content";
import './App.css';

class App extends Component {
  constructor(props){
    super(props);
    this.state = {
      mode:'read',//welcome 페이지, read 페이지 구분 //밑에 if문에서 mode검사할 때 welcome 철자/대소문자 오타 조심
      selected_content_id:2, // 선택된 content를 출력하기 위한 변
      subject:{title:'web', sub:'world wide web'},
      welcome:{title:'Welcome', desc:'Hello, React'}, //welcome mode일 때 content에 표시될 텍스트 지정
      contents:[
        {id:1, title:'html', desc:'html is for information'},
        {id:2, title:'css', desc:'css is for design'},
        {id:3, title:'javascript', desc:'javascript is for interactive'}
      ]
    }
  }
  render() {
    console.log('App render'); //render 호출되는지 로그 찍어보기
    var _title, _desc = null;
    if(this.state.mode === 'welcome') { //=== 3개인 거 오타 조심
      _title = this.state.welcome.title;
      _desc = this.state.welcome.desc;
    } else if(this.state.mode === 'read') {
      var i = 0;
      while(i<this.state.contents.length) {
        var data = this.state.contents[i];
        if(data.id === this.state.selected_content_id) {
          _title = data.title;
          _desc = data.desc;
          break;
        }
        i=i+1;
      }

    }
    return (
      <div className="App">
      <Subject
      title={this.state.subject.title}
      sub={this.state.subject.sub}
      onChangePage={function(){
        {/*alert('hihihi');*/}
        this.setState({
          mode:'welcome'
        })
      }.bind(this)}
      >
      </Subject>
      <TOC
      data={this.state.contents}
      onChangeDesc={function(id) {
        this.setState({
          mode:'read',
          selected_content_id:Number(id)
        })
      }.bind(this)}
      >
      </TOC>
      <Content title={_title} desc={_desc}></Content>
      </div>
    );
  }
}

export default App;

import React, { Component} from 'react';
//리액트라는 라이브러리에서 컴포넌트라는 클래스를 로딩한 것.


class TOC extends Component {
  render(){
  console.log('TOC render'); //render 호출되는지 로그 찍어보기
  var lists=[];
  var data=this.props.data;
  var i=0;
  while(i<data.length){
      lists.push(
        <li key={data[i].id}>
        <a
        href={"/content/"+data[i].id}
        data-id={data[i].id} //클릭한 id를 얻기 위해 새로운 속성 추가
        onClick={function(e){
          e.preventDefault();
          this.props.onChangeDesc(e.target.dataset.id);
        }.bind(this)}>
        {data[i].title}</a>
        </li>);
      i=i+1;
  }
    return(
      <nav>
        <ul>
          {lists}
          </ul>
        </nav>
    );
  }
}
export default TOC;
//이 export문을 써줌으로써 TOC라는 클래스를 다른 파일이 가져다 쓸 수 있음.
