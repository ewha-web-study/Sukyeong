redux가 좋은 가장 중요한 이유?
부품이 두개라면 그리고 서로 상호작용을 한다면,

자기자신의 기능
남의 기능

부품한개 = 기능2 , 총 부품 2개일경우 4개의 기능이 필요하다.

세개의 부품이라면 ,

부품한개 =기능3, 총 3개 9개의 기능(로직)이 필요하다.

이렇듯 3개면 9개의 코드를 4개면 16개의 코드를 작성해야한다 마찬가지로,

지우는 작업도 굉장함. 
프로그램실행했다가 실패하는 일도 일어남 => 여러가지 문제

독립성이 있어야 작동해야할텐데 위와같은경우 종속되어있기때문에
정상 작동이 되질않음.
=> 리액트가 존재하는 가장 큰 이유


redux는 ?
버튼은 리덕스의 스토어에 데이터가 달라졌다고 알려줌.
(로직한개)

스토어는 나머지 부품 전체에게 업데이트하라는 것을 통보함. 
스토의 상태에 따라 어떻게 바뀔지 각자 자신의 동작, 해야하는 부분을 실행함

각각의 부품은 자신을 알아서 변하게 해야함.

상태가 바뀌었을때 바뀌었다고 알려줄 수 있는 로직한개,
그리고 상태가 변경되었을때 자기자신을 변했을때 로직한개

4 = 8, 5 =10, 6 =12...

리덕스의 중요한 특징:
중앙집중적인 데이터스토어를 통해 어플리케이션을 쉽게 개발할 수있음.
시간여행을 할 수 있음.

